{
  "version": 3,
  "sources": ["../src/emend.js"],
  "sourcesContent": ["/**\n * Creates a new encoder.\n * @param {string} salt - The salt to use for the encoder.\n * @returns {function} - The encoder.\n */\nconst cipher = (salt) => {\n  const str2chr = (text) => text.split('').map(c => c.charCodeAt(0));\n  const byteHex = (n) => (\"0\" + Number(n).toString(16)).substr(-2);\n  const applySalt = (code) => str2chr(salt).reduce((a, b) => a ^ b, code);\n\n  return (text) => text.split('')\n    .map(str2chr)\n    .map(applySalt)\n    .map(byteHex)\n    .join('');\n};\n\n/**\n * Creates a new decoder.\n * @param {string} salt - The salt to use for the decoder.\n * @returns {function} - The decoder.\n */\nconst decipher = (salt) => {\n  const str2chr = (rawVal) => rawVal.split('').map(c => c.charCodeAt(0));\n  const applySalt = (code) => str2chr(salt).reduce((a, b) => a ^ b, code);\n\n  return (text) => String(text).match(/.{1,2}/g)\n    .map(hex => parseInt(hex, 16))\n    .map(applySalt)\n    .map(charCode => String.fromCharCode(charCode))\n    .join('');\n};\n\n/**\n * Default configuration options\n */\nconst DEFAULT_OPTIONS = {\n  explicitPrefix: '@',\n  salt: '',\n  explicitOnly: false,\n  domRemoveDelay: 1200,\n  sendClickDelay: 500\n};\n\n/**\n * @class Emend\n * A lightweight JavaScript library for protecting mailto anchor links from web scrapers.\n */\nclass Emend {\n  #version = '1.1.0';\n  #options;\n  #cipher;\n  #decipher;\n\n  /**\n   * @constructor\n   * @param {Object} options - Initial options to override defaults\n   */\n  constructor(options = {}) {\n    this.#options = { ...DEFAULT_OPTIONS, ...options };\n  }\n\n  /**\n   * Initialize the emend object.\n   * @param {Object} options - The options to use.\n   * @returns {Emend} The emend instance for chaining.\n   */\n  init(options = {}) {\n    this.#options = { ...this.#options, ...options };\n    this.#cipher = cipher(this.#options.salt);\n    this.#decipher = decipher(this.#options.salt);\n\n    const anchors = document.querySelectorAll('a');\n    anchors.forEach(anchor => {\n      const href = anchor.getAttribute('href');\n      if (!href || href.indexOf('mailto:') !== 0) return;\n\n      const explicitMailto = `mailto:${this.#options.explicitPrefix}`;\n      \n      if (href.indexOf(explicitMailto) === 0) {\n        // Handle explicitly marked mailto links\n        anchor.setAttribute('data-emended-mailto', href.replace(explicitMailto, ''));\n        anchor.href = '#';\n      } else if (!this.#options.explicitOnly) {\n        // Handle normal mailto links when not in explicit only mode\n        this.protect(anchor);\n      }\n\n      anchor.addEventListener('click', (e) => {\n        e.preventDefault();\n        this.sendMail(e.target);\n      });\n    });\n\n    return this;\n  }\n\n  /**\n   * Encrypts a string and returns the encrypted string.\n   * @param {string} text - The string to encrypt.\n   * @returns {string} The encrypted string.\n   */\n  encode(valueToEncrypt) {\n    return this.#cipher(valueToEncrypt.replace('mailto:', ''));\n  }\n\n  /**\n   * Decrypts a string that was encrypted with the encode() method.\n   * @param {string} encodedValue The string to decrypt.\n   * @returns {string} The decrypted string.\n   */\n  decode(encodedValue) {\n    return this.#decipher(encodedValue);\n  }\n\n  /**\n   * Finds an anchor element and strips the mailto link from it.\n   * Encodes the mailto link as an emended data attribute.\n   * @param {HTMLElement} element The anchor element to be protected.\n   * @returns {HTMLElement} The anchor element that was protected.\n   */\n  protect(element) {\n    const val = element.getAttribute('href').replace('mailto:', '');\n    element.setAttribute('data-emended-mailto', this.encode(val));\n    element.setAttribute('href', '#');\n    return element;\n  }\n\n  /**\n   * Decodes an emended anchor element and triggers a mailto: link\n   * Creates a hidden new anchor and simulates a click event to prevent the browser from blocking the click.\n   * @param {HTMLElement} element The anchor element to decode\n   */\n  sendMail(element) {\n    if (!element.hasAttribute('data-emended-mailto')) return;\n    \n    const mailto = `mailto:${this.decode(element.getAttribute('data-emended-mailto'))}`;\n    \n    // Create a temporary dom element and simulate a click to launch the mailto link\n    const dom = document.createElement('a');\n    dom.style.visibility = 'hidden';\n    dom.style.position = 'absolute';\n    dom.href = mailto;\n    document.body.appendChild(dom);\n    \n    setTimeout(() => dom.click(), this.#options.sendClickDelay);\n    setTimeout(() => document.body.removeChild(dom), this.#options.domRemoveDelay);\n  }\n\n  /**\n   * Get the version of the library\n   * @returns {string} The version number\n   */\n  get version() {\n    return this.#version;\n  }\n}\n\n// Create a singleton instance\nconst emend = new Emend();\n\n// Export as module\nexport default emend;\nexport { Emend };\n"],
  "mappings": "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",
  "names": ["emend_exports", "__export", "Emend", "emend_default", "__toCommonJS", "cipher", "salt", "str2chr", "text", "c", "byteHex", "n", "applySalt", "code", "a", "b", "decipher", "rawVal", "hex", "charCode", "DEFAULT_OPTIONS", "_version", "_options", "_cipher", "_decipher", "Emend", "options", "__privateAdd", "__privateSet", "__privateGet", "anchor", "href", "explicitMailto", "e", "valueToEncrypt", "encodedValue", "element", "val", "mailto", "dom", "emend", "emend_default"]
}
